version: "3"

networks:
  default:

volumes:
    nfshtml:
        driver: local
        driver_opts:
            type: nfs
            o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
            device: ":/System/Volumes/Data${PWD}/${PROJECT_DIR}"

services:
  nginx:
    image: nginx:${NGINX_VERSION}
    ports:
      - ${NGINX_HTTP_HOST_PORT}:80
      - ${NGINX_HTTPS_HOST_PORT}:443
    volumes:
      - nfshtml:/var/www/html/:rw
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
      - ${NGINX_LIB_DIR}:/etc/nginx/lib/:ro
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_VHOST_DIR}:/etc/nginx/conf.d/:ro
      - ${CERTBOT_DATA_DIR}:/etc/letsencrypt:ro
      - ${CERTBOT_WWW_DIR}:/var/www/letsencrypt:ro
    restart: always
    networks:
      - default
    environment:
      TZ: "${TZ}"

  certbot:
    image: certbot/certbot:${CERTBOT_VERSION}
    volumes:
      - ${CERTBOT_DATA_DIR}:/etc/letsencrypt:rw
      - ${CERTBOT_WWW_DIR}:/var/www/letsencrypt:rw
      - ${CERTBOT_LOG_DIR}:/var/log/letsencrypt:rw
    restart: 'no'
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - default
    environment:
        TZ: "${TZ}"

  mysql:
    image: mariadb:${MARIADB_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "${TZ}"
    networks:
      - default

  redis:
    image: redis:${REDIS_VERSION}
    command: redis-server /etc/redis/redis.conf
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis/redis.conf:ro
      - ${REDIS_DATA_DIR}:/data/:rw
    environment:
      TZ: "${TZ}"
    restart: always
    networks:
      - default

  mongo:
    image: mongo:${MONGO_VERSION}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD}"

  mongo-express:
    image: mongo-express:${MONGO_EXPRESS_VERSION}
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_ROOT_PASSWORD}"

  php74:
    build:
      context: ./build/php/
      args:
        PHP_VERSION: ${PHP74_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php.sh
        TZ: "${TZ}"
    volumes:
      - nfshtml:/var/www/html/:rw
      - ${PHP74_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP74_LOG_DIR}:/var/log/php
      - ${COMPOSER_CACHE_DIR}:/usr/local/composer
      - ${COMPOSER_CONFIG_FILE}:/usr/local/composer/config.json
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  node:
    image: node:${NODE_VERSION}
    volumes:
      - ${PROJECT_DIR}:/var/www/html/:rw
      - ${NODE_HOME}:/var/node/:rw
    environment:
      TZ: "${TZ}"
    restart: 'no'
    networks:
      - default

  golang:
    image: golang:${GOLANG_VERSION}
    volumes:
      - ${PROJECT_DIR}:/var/www/html/:rw
    environment:
      TZ: "${TZ}"
    restart: 'no'
    networks:
      - default
